#version 450

#define USE_TEX_ARRAY 1

// App uniforms and attributes
#if USE_TEX_ARRAY
restrict uniform layout(rgba16f, binding=0, location=0) image2DArray uVolume;
restrict uniform layout(rgba16f, binding=1, location=1) image2DArray uPrevBuffer;
restrict uniform layout(rgba16f, binding=2, location=2) image2DArray uCurrBuffer;
#else
restrict uniform layout(rgba16f, binding=0, location=0) image3D uVolume;
restrict uniform layout(rgba16f, binding=1, location=1) image3D uPrevBuffer;
restrict uniform layout(rgba16f, binding=2, location=2) image3D uCurrBuffer;
#endif

uniform float uDamping;

layout(local_size_x = 8, local_size_y = 8, local_size_z = 8) in;

void main()
{
	const ivec3 offset[6] = ivec3[](
		ivec3(-1,  0,  0),
		ivec3( 1,  0,  0),
		ivec3( 0, -1,  0),
		ivec3( 0,  1,  0),
		ivec3( 0,  0, -1),
		ivec3( 0,  0,  1));
	
	//  Grab the information arround the active pixel.
	//
	//      [3]
	//
	//  [0]  st  [1]
	//
	//      [2]
	ivec3 texelPos = ivec3(gl_GlobalInvocationID.xyz);

	vec4 sum = vec4(0.0);
	for (int i = 0; i < 6; ++i) 
	{
		sum += imageLoad(uPrevBuffer, texelPos + offset[i]);
	}
	
	//  Make an average and substract the center value.
	sum = (sum / 3.0) - imageLoad(uCurrBuffer, texelPos);
	sum *= uDamping;

	imageStore(uVolume, texelPos, sum);
}
